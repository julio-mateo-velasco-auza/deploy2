---
// Cliente puro, sin SSR, mantiene tu look & feel
export const prerender = true;

import Base from '../../layouts/Base.astro';

const basePathRaw = import.meta.env.PUBLIC_BASE || import.meta.env.BASE_URL || '/';
const basePath = basePathRaw.replace(/\/$/, '');
const apiBaseRaw = import.meta.env.PUBLIC_API_BASE || `${basePath}/inbolsa-api/api`;
const apiBase = apiBaseRaw.replace(/\/$/, '');
---
<Base title="Iniciar sesión — Inbolsa">
  <main
    class="mx-auto max-w-md px-4 py-16"
    data-base-path={basePath}
    data-api-base={apiBase}
  >
    <h1 class="text-2xl font-semibold mb-6">Iniciar sesión</h1>
    <p class="text-slate-600">Acceso privado para generar y gestionar QR.</p>

    <div class="mt-6 rounded-xl border bg-white p-5 shadow-sm">
      <p id="err" class="hidden mb-3 rounded bg-red-600/10 text-red-700 px-3 py-2 text-sm"></p>

      <form id="loginForm" class="space-y-4">
        <label class="block">
          <span class="text-sm">Email</span>
          <input id="email" type="email" required class="mt-1 w-full rounded border px-3 py-2" />
        </label>
        <label class="block">
          <span class="text-sm">Contraseña</span>
          <input id="password" type="password" required class="mt-1 w-full rounded border px-3 py-2" />
        </label>
        <button class="w-full rounded bg-black text-white py-2">Entrar</button>
      </form>
    </div>
  </main>

  <script type="module">
    // Script directo sin importar módulos
    const container = document.querySelector('main[data-base-path]');
    const rawBase = container?.getAttribute('data-base-path') ?? (import.meta.env.BASE_URL ?? '');
    const BASE_PATH = rawBase.endsWith('/') ? rawBase.slice(0, -1) : rawBase;
    const rawApi = container?.getAttribute('data-api-base') ?? `${BASE_PATH}/inbolsa-api/api`;
    const API_BASE = rawApi.endsWith('/') ? rawApi.slice(0, -1) : rawApi;

    const joinBase = (path = '') => {
      const clean = path.startsWith('/') ? path.slice(1) : path;
      return `${BASE_PATH}/${clean}`.replace(/\/{2,}/g, '/');
    };

    const params = new URLSearchParams(location.search);
    const defaultNext = joinBase('app/panel');
    const sanitizeNext = (value) => {
      if (!value) return defaultNext;
      if (/^https?:\/\//i.test(value)) return value;
      if (value.startsWith(BASE_PATH)) return value;
      if (value.startsWith('/')) return joinBase(value);
      return joinBase(value);
    };
    const next = sanitizeNext(params.get('next'));

    const form = document.getElementById('loginForm');
    const err  = document.getElementById('err');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      err.classList.add('hidden'); 
      err.textContent = '';

      const email = document.getElementById('email').value.trim().toLowerCase();
      const password = document.getElementById('password').value;

      try {
        const response = await fetch(`${API_BASE}/auth/login`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ email, password }),
          credentials: 'include'
        });

        const data = await response.json();
        
        if (response.ok && data.ok) {
          location.href = next;
        } else {
          err.textContent = data.error || 'Error de autenticación';
          err.classList.remove('hidden');
        }
      } catch (ex) {
        console.error('Error en login:', ex);
        err.textContent = ex?.message || 'Error de autenticación';
        err.classList.remove('hidden');
      }
    });

    // Prellenado para desarrollo
    document.getElementById('email').value = 'admin@inbolsa.com';
    document.getElementById('password').value = '123456';
  </script>
</Base>
